{% comment %}
=============================================================================
SECTION SHOPIFY 2.0 - ANALYSEUR EAU - ALGORITHME SCIENTIFIQUE v5.4
=============================================================================
Interface optimis√©e avec responsivit√©, CSS personnalisable et UX am√©lior√©e
Version 5.4 - Responsivit√© + CSS modulaire + Nouvelle recherche + PDF
=============================================================================
{% endcomment %}

<div id="water-analyzer-{{ section.id }}" class="water-analyzer-section">
  <div class="page-width">
    <div class="water-analyzer-container">
      
      <div class="water-analyzer-header">
        <h2 class="water-analyzer-title">{{ section.settings.title | default: "Analyseur Scientifique √âquitable de Qualit√© de l'Eau" }}</h2>
        {% if section.settings.description != blank %}
          <div class="water-analyzer-description rte">
            {{ section.settings.description }}
          </div>
        {% endif %}
      </div>

      <div id="analysis-tool-container-{{ section.id }}" class="analysis-tool-container">
        
        <div class="analysis-tool-header">
          <h3 class="water-analyzer-subtitle">üî¨ Outil d'Analyse Scientifique v5.4</h3>
          <p class="water-analyzer-intro">D√©couvrez la qualit√© de votre eau potable gr√¢ce √† notre <strong>algorithme scientifique √©quitable</strong> bas√© sur les normes OMS et UE.</p>
          <p class="water-analyzer-features"><strong>Nouveaut√© v5.4 :</strong> Interface optimis√©e, t√©l√©chargement PDF et recherches multiples.</p>
          <p class="water-analyzer-note"><small>üí° Si aucune donn√©e n'est disponible pour votre commune, nous rechercherons automatiquement dans les communes voisines.</small></p>
        </div>

        <!-- Formulaire initial ou formulaire simplifi√© -->
        <div id="analysis-form-{{ section.id }}" class="analysis-form">
          
          <!-- Informations personnelles (masqu√©es apr√®s premi√®re soumission) -->
          <div id="personal-info-section-{{ section.id }}" class="personal-info-section">
            <h4 class="form-section-title">üìã Vos informations</h4>
            
            <div class="field-row">
              <div class="field field--half">
                <input
                  class="field__input"
                  type="text"
                  id="user-firstname-{{ section.id }}"
                  name="firstname"
                  placeholder="Jean"
                  required
                >
                <label class="field__label" for="user-firstname-{{ section.id }}">Pr√©nom *</label>
              </div>
              
              <div class="field field--half">
                <input
                  class="field__input"
                  type="text"
                  id="user-lastname-{{ section.id }}"
                  name="lastname"
                  placeholder="Dupont"
                  required
                >
                <label class="field__label" for="user-lastname-{{ section.id }}">Nom *</label>
              </div>
            </div>

            <div class="field-row">
              <div class="field field--half">
                <input
                  class="field__input"
                  type="email"
                  id="user-email-{{ section.id }}"
                  name="email"
                  placeholder="jean.dupont@email.com"
                  required
                >
                <label class="field__label" for="user-email-{{ section.id }}">Adresse email *</label>
              </div>
              
              <div class="field field--half">
                <input
                  class="field__input"
                  type="tel"
                  id="user-phone-{{ section.id }}"
                  name="phone"
                  placeholder="06 12 34 56 78"
                >
                <label class="field__label" for="user-phone-{{ section.id }}">T√©l√©phone (optionnel)</label>
              </div>
            </div>
            
            <small class="field__help">üí° Vos informations ne seront utilis√©es que pour vous contacter concernant votre analyse</small>
          </div>

          <!-- Adresse √† analyser (toujours visible) -->
          <div class="address-section">
            <h4 class="form-section-title">üìç Adresse √† analyser</h4>
            
            <div class="field field--with-error">
              <div class="address-input-wrapper">
                <input
                  class="field__input"
                  type="text"
                  id="analysis-address-{{ section.id }}"
                  name="address"
                  placeholder="123 rue de la R√©publique, 75001 Paris"
                  required
                >
                <label class="field__label" for="analysis-address-{{ section.id }}">Adresse compl√®te *</label>
                <div id="address-suggestions-{{ section.id }}" class="address-suggestions"></div>
              </div>
              <small id="address-error-{{ section.id }}" class="form__message" hidden>
                <span class="form__message-icon">‚ö†Ô∏è</span>
                Veuillez s√©lectionner une adresse dans la liste
              </small>
              <div id="address-status-{{ section.id }}" class="address-status"></div>
            </div>
          </div>

          <!-- Options (masqu√©es apr√®s premi√®re soumission) -->
          <div id="options-section-{{ section.id }}" class="options-section">
            <h4 class="form-section-title">‚öôÔ∏è Options</h4>
            
            <div class="field">
              <fieldset class="form__fieldset">
                <div class="form__checkbox-wrapper">
                  <input
                    type="checkbox"
                    id="contact-professional-{{ section.id }}"
                    name="contact_professional"
                    class="form__checkbox"
                  >
                  <label for="contact-professional-{{ section.id }}" class="form__checkbox-label">
                    <span class="form__checkbox-text">
                      Je souhaite √™tre contact√© par un professionnel pour en savoir plus sur la qualit√© de mon eau
                    </span>
                  </label>
                </div>
              </fieldset>
            </div>
          </div>

          <!-- Consentement GDPR (masqu√© apr√®s premi√®re soumission) -->
          <div id="gdpr-section-{{ section.id }}" class="gdpr-section">
            <h4 class="form-section-title">üîí Protection des donn√©es</h4>
            
            <div class="gdpr-info">
              <p class="gdpr-text">
                <strong>Life Water</strong> s'engage √† prot√©ger vos donn√©es personnelles conform√©ment au RGPD.
              </p>
              
              <div class="field">
                <fieldset class="form__fieldset">
                  <div class="form__checkbox-wrapper form__checkbox-wrapper--required">
                    <input
                      type="checkbox"
                      id="gdpr-consent-{{ section.id }}"
                      name="gdpr_consent"
                      class="form__checkbox"
                      required
                    >
                    <label for="gdpr-consent-{{ section.id }}" class="form__checkbox-label">
                      <span class="form__checkbox-text">
                        <strong>J'accepte que mes donn√©es personnelles soient utilis√©es pour :</strong><br>
                        ‚Ä¢ R√©aliser l'analyse de qualit√© d'eau demand√©e<br>
                        ‚Ä¢ Me fournir le rapport d'analyse en t√©l√©chargement<br>
                        ‚Ä¢ Me contacter concernant nos services (si option coch√©e)
                      </span>
                    </label>
                  </div>
                </fieldset>
              </div>

              <div class="field">
                <fieldset class="form__fieldset">
                  <div class="form__checkbox-wrapper">
                    <input
                      type="checkbox"
                      id="marketing-consent-{{ section.id }}"
                      name="marketing_consent"
                      class="form__checkbox"
                    >
                    <label for="marketing-consent-{{ section.id }}" class="form__checkbox-label">
                      <span class="form__checkbox-text">
                        J'accepte de recevoir des informations commerciales sur les solutions Life Water (optionnel)
                      </span>
                    </label>
                  </div>
                </fieldset>
              </div>

              <div class="gdpr-links">
                <p class="gdpr-text">
                  <small>
                    Vous disposez d'un droit d'acc√®s, de rectification, d'opposition et de suppression de vos donn√©es.<br>
                    Pour plus d'informations : 
                    <a href="/pages/politique-confidentialite" target="_blank">Politique de confidentialit√©</a> ‚Ä¢ 
                    <a href="/pages/mentions-legales" target="_blank">Mentions l√©gales</a> ‚Ä¢ 
                    <a href="mailto:contact@lifewater.fr">contact@lifewater.fr</a>
                  </small>
                </p>
              </div>
            </div>
          </div>

          <div class="form__submit">
            <button type="button" class="water-analyzer-button water-analyzer-button--primary" id="start-water-analysis-{{ section.id }}">
              <span id="button-text-{{ section.id }}">üß™ Analyser avec l'algorithme √©quitable</span>
              <div class="loading-overlay__spinner hidden">
                <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                  <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                </svg>
              </div>
            </button>
          </div>

        </div>

        <div id="analysis-loading-{{ section.id }}" class="analysis-loading" style="display: none;">
          <div class="loading-content">
            <div class="loading-overlay__spinner">
              <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
              </svg>
            </div>
            <p id="loading-text-{{ section.id }}" class="loading-text">Recherche des donn√©es de qualit√© d'eau...</p>
            <div id="progress-steps-{{ section.id }}" class="progress-steps">
              <div class="step" id="step-data-{{ section.id }}">
                <span class="step-icon">üìã</span>
                <span class="step-text">Validation</span>
              </div>
              <div class="step" id="step-geocoding-{{ section.id }}">
                <span class="step-icon">üìç</span>
                <span class="step-text">G√©ocodage</span>
              </div>
              <div class="step" id="step-analysis-{{ section.id }}">
                <span class="step-icon">üßÆ</span>
                <span class="step-text">Analyse</span>
              </div>
              <div class="step" id="step-scoring-{{ section.id }}">
                <span class="step-icon">üéØ</span>
                <span class="step-text">Scoring</span>
              </div>
              <div class="step" id="step-generation-{{ section.id }}">
                <span class="step-icon">üìÑ</span>
                <span class="step-text">G√©n√©ration</span>
              </div>
            </div>
          </div>
        </div>

        <div id="analysis-results-{{ section.id }}" class="analysis-results" style="display: none;">
          <!-- Les r√©sultats Life Water v5.4 seront affich√©s ici apr√®s l'analyse -->
        </div>

      </div>

    </div>
  </div>
</div>

<style>
  /* ===== VARIABLES CSS PERSONNALISABLES ===== */
  :root {
    /* Couleurs principales */
    --water-primary-color: #667eea;
    --water-secondary-color: #764ba2;
    --water-success-color: #28a745;
    --water-warning-color: #ffc107;
    --water-error-color: #dc3545;
    --water-info-color: #17a2b8;
    
    /* Couleurs de fond */
    --water-bg-primary: #ffffff;
    --water-bg-secondary: #f8f9fa;
    --water-bg-light: rgba(255, 255, 255, 0.9);
    --water-bg-dark: #343a40;
    
    /* Textes */
    --water-text-primary: #333333;
    --water-text-secondary: #666666;
    --water-text-light: #999999;
    --water-text-white: #ffffff;
    
    /* Tailles de texte */
    --water-text-xs: 1.2rem;
    --water-text-sm: 1.4rem;
    --water-text-base: 1.6rem;
    --water-text-lg: 1.8rem;
    --water-text-xl: 2.0rem;
    --water-text-2xl: 2.4rem;
    --water-text-3xl: 2.8rem;
    
    /* Espacements */
    --water-space-xs: 0.5rem;
    --water-space-sm: 1rem;
    --water-space-base: 1.5rem;
    --water-space-lg: 2rem;
    --water-space-xl: 2.5rem;
    --water-space-2xl: 3rem;
    
    /* Bordures et ombres */
    --water-border-radius: 1rem;
    --water-border-radius-sm: 0.8rem;
    --water-border-radius-lg: 1.2rem;
    --water-shadow-sm: 0 2px 4px rgba(0,0,0,0.1);
    --water-shadow-base: 0 4px 8px rgba(0,0,0,0.1);
    --water-shadow-lg: 0 8px 16px rgba(0,0,0,0.15);
  }

  /* ===== STYLES PRINCIPAUX ===== */
  .water-analyzer-section {
    padding: var(--water-space-2xl) 0;
    background: var(--water-bg-secondary);
  }
  
  .water-analyzer-container {
    max-width: 85rem;
    margin: 0 auto;
    padding: 0 var(--water-space-base);
  }
  
  .water-analyzer-header {
    text-align: center;
    margin-bottom: var(--water-space-2xl);
    padding: var(--water-space-xl);
    background: var(--water-bg-primary);
    border-radius: var(--water-border-radius-lg);
    box-shadow: var(--water-shadow-base);
  }
  
  .water-analyzer-title {
    color: var(--water-text-primary);
    font-size: var(--water-text-3xl);
    font-weight: 700;
    margin-bottom: var(--water-space-base);
    line-height: 1.2;
  }
  
  .water-analyzer-description {
    margin-top: var(--water-space-base);
    font-size: var(--water-text-base);
    color: var(--water-text-secondary);
    line-height: 1.6;
  }
  
  /* ===== CONTAINER PRINCIPAL ===== */
  .analysis-tool-container {
    background: var(--water-bg-primary);
    border: 0.1rem solid rgba(var(--color-foreground), 0.1);
    border-radius: var(--water-border-radius-lg);
    padding: var(--water-space-2xl);
    margin-bottom: var(--water-space-lg);
    box-shadow: var(--water-shadow-lg);
  }

  .analysis-tool-header {
    text-align: center;
    margin-bottom: var(--water-space-2xl);
    padding: var(--water-space-xl);
    background: linear-gradient(135deg, 
      rgba(102, 126, 234, 0.1) 0%, 
      rgba(118, 75, 162, 0.05) 100%
    );
    border-radius: var(--water-border-radius);
    border: 0.1rem solid rgba(102, 126, 234, 0.2);
  }

  .water-analyzer-subtitle {
    margin: 0 0 var(--water-space-base) 0;
    color: var(--water-primary-color);
    font-size: var(--water-text-2xl);
    font-weight: 600;
  }

  .water-analyzer-intro {
    font-size: var(--water-text-base);
    color: var(--water-text-primary);
    margin-bottom: var(--water-space-base);
    line-height: 1.6;
  }

  .water-analyzer-features {
    font-size: var(--water-text-sm);
    color: var(--water-primary-color);
    margin-bottom: var(--water-space-base);
    font-weight: 500;
  }

  .water-analyzer-note {
    font-size: var(--water-text-xs);
    color: var(--water-text-light);
    margin: 0;
  }

  /* ===== SECTIONS DU FORMULAIRE ===== */
  .personal-info-section,
  .address-section,
  .options-section,
  .gdpr-section {
    background: var(--water-bg-light);
    border: 0.1rem solid rgba(var(--color-foreground), 0.08);
    border-radius: var(--water-border-radius);
    padding: var(--water-space-xl);
    margin-bottom: var(--water-space-xl);
    transition: all 0.3s ease;
  }

  .personal-info-section:hover,
  .address-section:hover,
  .options-section:hover {
    box-shadow: var(--water-shadow-base);
    transform: translateY(-2px);
  }

  .form-section-title {
    font-size: var(--water-text-lg);
    font-weight: 600;
    margin: 0 0 var(--water-space-lg) 0;
    color: var(--water-text-primary);
    padding-bottom: var(--water-space-base);
    border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.1);
  }

  /* ===== CHAMPS EN LIGNE RESPONSIFS ===== */
  .field-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--water-space-lg);
    margin-bottom: var(--water-space-lg);
  }

  .field {
    margin-bottom: var(--water-space-base);
  }

  .field--half {
    /* G√©r√© par grid maintenant */
  }

  .field__label {
    font-size: var(--water-text-sm);
    font-weight: 500;
    color: var(--water-text-primary);
    margin-bottom: var(--water-space-xs);
    display: block;
  }

  .field__input {
    width: 100%;
    padding: var(--water-space-base);
    font-size: var(--water-text-base);
    border: 0.1rem solid rgba(var(--color-foreground), 0.2);
    border-radius: var(--water-border-radius-sm);
    transition: all 0.3s ease;
    background: var(--water-bg-primary);
  }

  .field__input:focus {
    outline: none;
    border-color: var(--water-primary-color);
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }

  .field__input--error {
    border-color: var(--water-error-color);
    background-color: rgba(220, 53, 69, 0.05);
  }

  .field__help {
    display: block;
    margin-top: var(--water-space-xs);
    font-size: var(--water-text-xs);
    color: var(--water-text-light);
    font-style: italic;
    line-height: 1.4;
  }

  /* ===== AUTOCOMPL√âTION ADRESSE ===== */
  .address-input-wrapper {
    position: relative;
  }

  .address-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: var(--water-bg-primary);
    border: 0.1rem solid rgba(var(--color-foreground), 0.2);
    border-top: none;
    border-radius: 0 0 var(--water-border-radius-sm) var(--water-border-radius-sm);
    max-height: 20rem;
    overflow-y: auto;
    z-index: 1000;
    display: none;
    box-shadow: var(--water-shadow-base);
  }

  .address-suggestion {
    padding: var(--water-space-base);
    cursor: pointer;
    border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.1);
    transition: background-color 0.2s ease;
    font-size: var(--water-text-sm);
  }

  .address-suggestion:hover {
    background: rgba(102, 126, 234, 0.1);
  }

  .address-status {
    margin-top: var(--water-space-base);
    font-size: var(--water-text-sm);
    padding: var(--water-space-base);
    border-radius: var(--water-border-radius-sm);
    display: none;
  }

  .address-status.success {
    background: rgba(40, 167, 69, 0.1);
    color: var(--water-success-color);
    border: 0.1rem solid rgba(40, 167, 69, 0.2);
    display: block;
  }

  .address-status.error {
    background: rgba(220, 53, 69, 0.1);
    color: var(--water-error-color);
    border: 0.1rem solid rgba(220, 53, 69, 0.2);
    display: block;
  }

  /* ===== SECTION GDPR ===== */
  .gdpr-section {
    background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    border: 0.1rem solid #e9ecef;
  }

  .gdpr-info {
    font-size: var(--water-text-sm);
    line-height: 1.6;
  }

  .gdpr-text {
    margin-bottom: var(--water-space-base);
    color: var(--water-text-primary);
  }

  .gdpr-links {
    background: rgba(102, 126, 234, 0.05);
    padding: var(--water-space-base);
    border-radius: var(--water-border-radius-sm);
    margin-top: var(--water-space-base);
  }

  .gdpr-links a {
    color: var(--water-primary-color);
    text-decoration: underline;
    font-weight: 500;
  }

  .gdpr-links a:hover {
    text-decoration: none;
  }

  /* ===== FORMULAIRE ===== */
  .form__fieldset {
    border: none;
    padding: 0;
    margin: 0;
  }

  .form__checkbox-wrapper {
    display: flex;
    align-items: flex-start;
    gap: var(--water-space-base);
    margin-bottom: var(--water-space-base);
    padding: var(--water-space-base);
    border-radius: var(--water-border-radius-sm);
    transition: background-color 0.3s ease;
  }

  .form__checkbox-wrapper:hover {
    background: rgba(102, 126, 234, 0.02);
  }

  .form__checkbox-wrapper--required {
    background: rgba(102, 126, 234, 0.05);
    border: 0.1rem solid rgba(102, 126, 234, 0.2);
  }

  .form__checkbox {
    margin-top: 0.2rem;
    width: 1.8rem;
    height: 1.8rem;
    flex-shrink: 0;
    accent-color: var(--water-primary-color);
  }

  .form__checkbox-label {
    cursor: pointer;
    font-size: var(--water-text-sm);
    line-height: 1.5;
  }

  .form__checkbox-text {
    display: block;
  }

  /* ===== BOUTONS PERSONNALISABLES ===== */
  .water-analyzer-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--water-space-xs);
    padding: var(--water-space-lg) var(--water-space-xl);
    font-size: var(--water-text-base);
    font-weight: 600;
    border: none;
    border-radius: var(--water-border-radius);
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    min-height: 5.5rem;
  }

  .water-analyzer-button--primary {
    background: linear-gradient(135deg, var(--water-primary-color) 0%, var(--water-secondary-color) 100%);
    color: var(--water-text-white);
    width: 100%;
    font-size: var(--water-text-lg);
  }

  .water-analyzer-button--primary:hover {
    transform: translateY(-2px);
    box-shadow: var(--water-shadow-lg);
  }

  .water-analyzer-button--secondary {
    background: var(--water-bg-secondary);
    color: var(--water-text-primary);
    border: 0.1rem solid rgba(var(--color-foreground), 0.2);
  }

  .water-analyzer-button--secondary:hover {
    background: var(--water-bg-primary);
    box-shadow: var(--water-shadow-base);
  }

  /* ===== LOADING AM√âLIOR√â ===== */
  .analysis-loading {
    text-align: center;
    padding: var(--water-space-2xl);
    background: var(--water-bg-light);
    border-radius: var(--water-border-radius);
  }

  .loading-content {
    max-width: 50rem;
    margin: 0 auto;
  }

  .loading-text {
    margin: var(--water-space-lg) 0;
    font-size: var(--water-text-base);
    color: var(--water-text-primary);
    min-height: 2.4rem;
    font-weight: 500;
  }

  .progress-steps {
    display: flex;
    justify-content: center;
    gap: var(--water-space-lg);
    margin-top: var(--water-space-2xl);
    flex-wrap: wrap;
  }

  .step {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--water-space-xs);
    opacity: 0.3;
    transition: opacity 0.4s ease;
    min-width: 8rem;
    padding: var(--water-space-base);
    border-radius: var(--water-border-radius-sm);
  }

  .step.active {
    opacity: 1;
    color: var(--water-primary-color);
    background: rgba(102, 126, 234, 0.1);
    transform: scale(1.05);
  }

  .step.completed {
    opacity: 1;
    color: var(--water-success-color);
    background: rgba(40, 167, 69, 0.1);
  }

  .step.error {
    opacity: 1;
    color: var(--water-error-color);
    background: rgba(220, 53, 69, 0.1);
  }

  .step-icon {
    font-size: var(--water-text-2xl);
  }

  .step-text {
    font-size: var(--water-text-xs);
    font-weight: 500;
    text-align: center;
  }

  .form__message {
    display: flex;
    align-items: center;
    gap: var(--water-space-xs);
    color: var(--water-error-color);
    font-size: var(--water-text-xs);
    margin-top: var(--water-space-xs);
  }

  /* ===== STYLES LIFE WATER v5.4 ===== */
  .life-water-report {
    border-radius: var(--water-border-radius-lg);
    overflow: hidden;
    box-shadow: var(--water-shadow-lg);
    background: var(--water-bg-primary);
    margin-top: var(--water-space-lg);
  }
  
  .life-water-header {
    background: linear-gradient(135deg, var(--water-primary-color) 0%, var(--water-secondary-color) 100%);
    color: var(--water-text-white);
    padding: var(--water-space-2xl);
    text-align: center;
  }
  
  .life-water-header h2 {
    margin: 0 0 var(--water-space-lg) 0;
    font-size: var(--water-text-3xl);
    font-weight: 600;
  }
  
  .life-water-header p {
    margin: var(--water-space-base) 0;
    font-size: var(--water-text-base);
    opacity: 0.95;
  }
  
  .life-water-header hr {
    border: none;
    height: 1px;
    background: rgba(255,255,255,0.3);
    margin: var(--water-space-lg) 0;
  }
  
  .resultat-principal {
    background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);
    color: var(--water-text-white);
    padding: var(--water-space-2xl);
    text-align: center;
  }
  
  .resultat-principal h3 {
    margin: 0 0 var(--water-space-lg) 0;
    font-size: var(--water-text-xl);
  }
  
  .score-display {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--water-space-2xl);
    margin: var(--water-space-2xl) 0;
    flex-wrap: wrap;
  }
  
  .score-circle {
    width: 15rem;
    height: 15rem;
    border: 0.8rem solid;
    border-radius: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: var(--water-bg-primary);
    font-weight: bold;
  }
  
  .score-number {
    font-size: 3em;
    line-height: 1;
  }
  
  .score-label {
    font-size: 1em;
    opacity: 0.7;
  }
  
  .score-info h4 {
    font-size: var(--water-text-3xl);
    margin: 0 0 var(--water-space-base) 0;
  }
  
  .score-message {
    font-size: var(--water-text-lg);
    margin: 0;
  }
  
  .content-section {
    padding: var(--water-space-2xl);
  }
  
  .points-attention {
    background: #fff3cd;
    border-left: 5px solid var(--water-warning-color);
    padding: var(--water-space-lg);
    margin: var(--water-space-lg) 0;
    border-radius: 0 var(--water-border-radius) var(--water-border-radius) 0;
  }
  
  .recommandations {
    background: #d1ecf1;
    border-left: 5px solid var(--water-info-color);
    padding: var(--water-space-lg);
    margin: var(--water-space-lg) 0;
    border-radius: 0 var(--water-border-radius) var(--water-border-radius) 0;
  }
  
  .contributions-section {
    background: var(--water-bg-secondary);
    border-left: 5px solid #6c757d;
    padding: var(--water-space-lg);
    margin: var(--water-space-lg) 0;
    border-radius: 0 var(--water-border-radius) var(--water-border-radius) 0;
  }
  
  .details-section {
    background: #e8f5e8;
    border-left: 5px solid var(--water-success-color);
    padding: var(--water-space-lg);
    margin: var(--water-space-lg) 0;
    border-radius: 0 var(--water-border-radius) var(--water-border-radius) 0;
  }
  
  .footer-life-water {
    background: #e9ecef;
    padding: var(--water-space-2xl);
    text-align: center;
    border-top: 1px solid #dee2e6;
  }
  
  .life-water-report ul {
    padding-left: var(--water-space-lg);
  }
  
  .life-water-report li {
    margin: var(--water-space-xs) 0;
  }

  /* ===== BOUTONS D'ACTION R√âSULTATS ===== */
  .results-actions {
    display: flex;
    gap: var(--water-space-base);
    justify-content: center;
    flex-wrap: wrap;
    margin: var(--water-space-xl) 0;
    padding: var(--water-space-lg);
    background: var(--water-bg-light);
    border-radius: var(--water-border-radius);
  }

  .download-pdf-button {
    background: linear-gradient(135deg, var(--water-success-color) 0%, #20c997 100%);
    color: var(--water-text-white);
    padding: var(--water-space-lg) var(--water-space-xl);
    border: none;
    border-radius: var(--water-border-radius);
    font-size: var(--water-text-base);
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: var(--water-space-xs);
  }

  .download-pdf-button:hover {
    transform: translateY(-2px);
    box-shadow: var(--water-shadow-base);
  }

  .new-analysis-button {
    background: var(--water-bg-primary);
    color: var(--water-primary-color);
    border: 0.2rem solid var(--water-primary-color);
    padding: var(--water-space-base) var(--water-space-lg);
    border-radius: var(--water-border-radius);
    font-size: var(--water-text-sm);
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: var(--water-space-xs);
  }

  .new-analysis-button:hover {
    background: var(--water-primary-color);
    color: var(--water-text-white);
  }

  /* ===== FORMULAIRE SIMPLIFI√â ===== */
  .simplified-form {
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.02) 100%);
    border: 0.2rem dashed var(--water-primary-color);
    border-radius: var(--water-border-radius);
    padding: var(--water-space-xl);
    margin: var(--water-space-lg) 0;
  }

  .simplified-form h4 {
    color: var(--water-primary-color);
    font-size: var(--water-text-lg);
    margin-bottom: var(--water-space-base);
    text-align: center;
  }

  /* ===== RESPONSIVE DESIGN ===== */
  @media screen and (max-width: 768px) {
    .water-analyzer-section {
      padding: var(--water-space-xl) 0;
    }
    
    .water-analyzer-container {
      padding: 0 var(--water-space-base);
    }

    .analysis-tool-container {
      padding: var(--water-space-lg);
    }

    .water-analyzer-title {
      font-size: var(--water-text-2xl);
    }

    .water-analyzer-subtitle {
      font-size: var(--water-text-xl);
    }

    .personal-info-section,
    .address-section,
    .options-section,
    .gdpr-section {
      padding: var(--water-space-lg);
      margin-bottom: var(--water-space-lg);
    }

    .field-row {
      grid-template-columns: 1fr;
      gap: 0;
    }

    .progress-steps {
      gap: var(--water-space-sm);
    }

    .step {
      min-width: 6rem;
      padding: var(--water-space-xs);
    }

    .step-icon {
      font-size: var(--water-text-lg);
    }

    .score-display {
      flex-direction: column;
      gap: var(--water-space-lg);
    }

    .score-circle {
      width: 12rem;
      height: 12rem;
    }

    .score-number {
      font-size: 2.5em;
    }

    .content-section {
      padding: var(--water-space-lg);
    }

    .water-analyzer-button--primary {
      font-size: var(--water-text-base);
      padding: var(--water-space-lg);
      min-height: 5rem;
    }

    .results-actions {
      flex-direction: column;
      align-items: center;
    }

    .download-pdf-button,
    .new-analysis-button {
      width: 100%;
      justify-content: center;
      max-width: 30rem;
    }
  }

  @media screen and (max-width: 480px) {
    .water-analyzer-title {
      font-size: var(--water-text-xl);
    }

    .analysis-tool-header {
      padding: var(--water-space-base);
    }

    .personal-info-section,
    .address-section,
    .options-section,
    .gdpr-section {
      padding: var(--water-space-base);
    }

    .form-section-title {
      font-size: var(--water-text-base);
    }

    .field__input {
      padding: var(--water-space-sm);
      font-size: var(--water-text-sm);
    }

    .progress-steps {
      gap: var(--water-space-xs);
    }

    .step {
      min-width: 5rem;
    }

    .step-text {
      font-size: 1rem;
    }
  }

  /* ===== ANIMATIONS ===== */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .analysis-results {
    animation: fadeInUp 0.6s ease-out;
  }

  .step {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* ===== ACCESSIBILIT√â ===== */
  .water-analyzer-button:focus,
  .field__input:focus,
  .form__checkbox:focus {
    outline: 3px solid rgba(102, 126, 234, 0.3);
    outline-offset: 2px;
  }

  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }

  /* ===== √âTAT MASQU√â (pour nouvelle recherche) ===== */
  .form-section--hidden {
    display: none;
  }

  .form-section--simplified {
    background: var(--water-bg-light);
    border: 0.1rem dashed var(--water-primary-color);
    padding: var(--water-space-base);
  }
</style>

<!-- Chargement des fichiers JavaScript v5.4 -->
<script src="{{ 'baremes-eau.js' | asset_url }}" defer></script>
<script src="{{ 'scoring-eau.js' | asset_url }}" defer></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sectionId = '{{ section.id }}';
  
  const analysisForm = document.getElementById(`analysis-form-${sectionId}`);
  const analysisLoading = document.getElementById(`analysis-loading-${sectionId}`);
  const analysisResults = document.getElementById(`analysis-results-${sectionId}`);
  
  const firstnameInput = document.getElementById(`user-firstname-${sectionId}`);
  const lastnameInput = document.getElementById(`user-lastname-${sectionId}`);
  const emailInput = document.getElementById(`user-email-${sectionId}`);
  const phoneInput = document.getElementById(`user-phone-${sectionId}`);
  const addressInput = document.getElementById(`analysis-address-${sectionId}`);
  const gdprConsentInput = document.getElementById(`gdpr-consent-${sectionId}`);
  const contactProfessionalInput = document.getElementById(`contact-professional-${sectionId}`);
  
  const suggestionsContainer = document.getElementById(`address-suggestions-${sectionId}`);
  const statusContainer = document.getElementById(`address-status-${sectionId}`);
  const startWaterAnalysisBtn = document.getElementById(`start-water-analysis-${sectionId}`);
  const buttonText = document.getElementById(`button-text-${sectionId}`);
  const loadingText = document.getElementById(`loading-text-${sectionId}`);
  
  let selectedAddress = null;
  let debounceTimer = null;
  let userData = null; // Stockage des donn√©es utilisateur
  let isSimplifiedMode = false; // Mode formulaire simplifi√©

  console.log('üöÄ ANALYSEUR EAU v5.4 - INTERFACE OPTIMIS√âE INITIALIS√âE');

  // ===== FONCTIONS UTILITAIRES ===== 
  
  function showAddressError(show = true) {
    const errorElement = document.getElementById(`address-error-${sectionId}`);
    if (errorElement) {
      errorElement.hidden = !show;
    }
    if (addressInput) {
      if (show) {
        addressInput.classList.add('field__input--error');
        addressInput.setAttribute('aria-invalid', 'true');
      } else {
        addressInput.classList.remove('field__input--error');
        addressInput.removeAttribute('aria-invalid');
      }
    }
  }

  function updateProgressStep(stepName, status = 'active') {
    const step = document.getElementById(`step-${stepName}-${sectionId}`);
    if (step) {
      step.className = `step ${status}`;
    }
  }

  function showAddressStatus(message, type) {
    if (statusContainer) {
      statusContainer.textContent = message;
      statusContainer.className = `address-status ${type}`;
    }
  }

  function isValidPhone(phone) {
    // Validation simple pour num√©ros fran√ßais
    const phoneRegex = /^(?:(?:\+33|0)[1-9](?:[0-9]{8}))$/;
    return phoneRegex.test(phone.replace(/[\s\-\.]/g, ''));
  }

  function validateForm() {
    const errors = [];
    
    // Si mode simplifi√©, seule l'adresse est requise
    if (isSimplifiedMode) {
      if (!selectedAddress) {
        errors.push('Veuillez s√©lectionner une adresse dans la liste');
        showAddressError(true);
      } else {
        showAddressError(false);
      }
      return errors;
    }
    
    // Validation compl√®te pour le premier formulaire
    if (!firstnameInput.value.trim()) {
      errors.push('Le pr√©nom est obligatoire');
      firstnameInput.classList.add('field__input--error');
    } else {
      firstnameInput.classList.remove('field__input--error');
    }
    
    if (!lastnameInput.value.trim()) {
      errors.push('Le nom est obligatoire');
      lastnameInput.classList.add('field__input--error');
    } else {
      lastnameInput.classList.remove('field__input--error');
    }
    
    if (!emailInput.value.trim() || !isValidEmail(emailInput.value)) {
      errors.push('Une adresse email valide est obligatoire');
      emailInput.classList.add('field__input--error');
    } else {
      emailInput.classList.remove('field__input--error');
    }
    
    // Validation t√©l√©phone (optionnel mais si rempli, doit √™tre valide)
    if (phoneInput.value.trim() && !isValidPhone(phoneInput.value.trim())) {
      errors.push('Le num√©ro de t√©l√©phone n\'est pas valide');
      phoneInput.classList.add('field__input--error');
    } else {
      phoneInput.classList.remove('field__input--error');
    }
    
    if (!selectedAddress) {
      errors.push('Veuillez s√©lectionner une adresse dans la liste');
      showAddressError(true);
    } else {
      showAddressError(false);
    }
    
    if (!gdprConsentInput.checked) {
      errors.push('Vous devez accepter l\'utilisation de vos donn√©es personnelles');
      gdprConsentInput.classList.add('field__input--error');
    } else {
      gdprConsentInput.classList.remove('field__input--error');
    }
    
    return errors;
  }

  function isValidEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }

  function collectFormData() {
    return {
      firstname: firstnameInput.value.trim(),
      lastname: lastnameInput.value.trim(), 
      email: emailInput.value.trim(),
      phone: phoneInput.value.trim(),
      address: selectedAddress.properties.label,
      coordinates: {
        lat: selectedAddress.geometry.coordinates[1],
        lon: selectedAddress.geometry.coordinates[0]
      },
      codeCommune: selectedAddress.properties.citycode,
      contactProfessional: contactProfessionalInput?.checked || false,
      marketingConsent: document.getElementById(`marketing-consent-${sectionId}`)?.checked || false,
      timestamp: new Date().toISOString()
    };
  }

  function switchToSimplifiedMode() {
    isSimplifiedMode = true;
    
    // Masquer les sections non n√©cessaires
    const personalInfoSection = document.getElementById(`personal-info-section-${sectionId}`);
    const optionsSection = document.getElementById(`options-section-${sectionId}`);
    const gdprSection = document.getElementById(`gdpr-section-${sectionId}`);
    
    if (personalInfoSection) personalInfoSection.classList.add('form-section--hidden');
    if (optionsSection) optionsSection.classList.add('form-section--hidden');
    if (gdprSection) gdprSection.classList.add('form-section--hidden');
    
    // Modifier le style de la section adresse
    const addressSection = document.querySelector('.address-section');
    if (addressSection) {
      addressSection.classList.add('form-section--simplified');
    }
    
    // Changer le texte du bouton
    if (buttonText) {
      buttonText.textContent = 'üîç Analyser cette nouvelle adresse';
    }
    
    // R√©initialiser l'adresse
    if (addressInput) {
      addressInput.value = '';
      addressInput.focus();
    }
    selectedAddress = null;
    showAddressStatus('', '');
  }

  // ===== AUTOCOMPL√âTION ADRESSE ===== 
  
  async function searchAddress(query) {
    if (query.length < 3) {
      if (suggestionsContainer) {
        suggestionsContainer.style.display = 'none';
      }
      return;
    }

    try {
      const response = await fetch(`https://api-adresse.data.gouv.fr/search/?q=${encodeURIComponent(query)}&limit=5`);
      const data = await response.json();
      displaySuggestions(data.features || []);
    } catch (error) {
      console.error('Erreur API Adresse:', error);
      showAddressStatus('Erreur lors de la recherche d\'adresse', 'error');
    }
  }

  function displaySuggestions(features) {
    if (!suggestionsContainer) return;
    
    suggestionsContainer.innerHTML = '';
    
    if (features.length === 0) {
      suggestionsContainer.style.display = 'none';
      return;
    }

    features.forEach(feature => {
      const suggestion = document.createElement('div');
      suggestion.className = 'address-suggestion';
      suggestion.textContent = feature.properties.label;
      
      suggestion.addEventListener('click', function() {
        selectAddress(feature);
      });
      
      suggestionsContainer.appendChild(suggestion);
    });
    
    suggestionsContainer.style.display = 'block';
  }

  function selectAddress(feature) {
    selectedAddress = feature;
    if (addressInput) {
      addressInput.value = feature.properties.label;
    }
    if (suggestionsContainer) {
      suggestionsContainer.style.display = 'none';
    }
    showAddressError(false);
    
    const codeCommune = feature.properties.citycode;
    showAddressStatus(`‚úÖ Adresse valid√©e - Code commune: ${codeCommune}`, 'success');
  }

  // ===== G√âN√âRATION PDF =====

  async function generatePDFReport(scoreResult, formData, parametersData) {
    console.log('üìÑ G√©n√©ration du rapport PDF...');
    
    // Simulation de g√©n√©ration PDF
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // Ici vous int√©greriez votre solution de g√©n√©ration PDF
    // (jsPDF, Puppeteer, service externe, etc.)
    
    return { success: true, downloadUrl: '#' };
  }

  // ===== AFFICHAGE R√âSULTATS v5.4 =====
  
  function displayLifeWaterResults(scoreResult, formData, parametersData) {
    console.log('=== AFFICHAGE R√âSULTATS LIFE WATER v5.4 ===');
    console.log('Score:', scoreResult.score, 'Fiabilit√©:', scoreResult.fiabilite + '%');
    console.log('Utilisateur:', `${formData.firstname} ${formData.lastname}`);
    
    if (!analysisResults) return;
    
    if (analysisLoading) {
      analysisLoading.style.display = 'none';
    }
    
    // Personnalisation du rapport avec les donn√©es utilisateur
    const personalizedScoreResult = {
      ...scoreResult,
      userInfo: {
        name: `${formData.firstname} ${formData.lastname}`,
        email: formData.email,
        phone: formData.phone,
        address: formData.address
      }
    };
    
    const htmlLifeWater = generateLifeWaterHTML(
      personalizedScoreResult, 
      formData.address, 
      parametersData
    );
    
    // Ajout des boutons d'action
    const actionButtons = `
      <div class="results-actions">
        <button class="download-pdf-button" onclick="downloadPDFReport()">
          üìÑ T√©l√©charger le rapport PDF
        </button>
        <button class="new-analysis-button" onclick="startNewAnalysis()">
          üîç Analyser une autre adresse
        </button>
        <button class="water-analyzer-button water-analyzer-button--secondary" onclick="window.print()">
          üñ®Ô∏è Imprimer
        </button>
      </div>
    `;
    
    analysisResults.innerHTML = htmlLifeWater.replace(
      '<div class="footer-life-water">',
      actionButtons + '<div class="footer-life-water">'
    );
    
    analysisResults.style.display = 'block';
    
    // Animation du score avec fiabilit√©
    setTimeout(() => {
      const scoreNumber = analysisResults.querySelector('.score-number');
      const fiabilityFill = analysisResults.querySelector('.fiabilite-fill');
      const contributionFills = analysisResults.querySelectorAll('.contribution-fill');
      
      // Animation score principal
      if (scoreNumber && !isNaN(scoreResult.score)) {
        let currentScore = 0;
        const targetScore = scoreResult.score;
        const duration = 1500;
        const increment = targetScore / (duration / 16);
        
        const animateScore = () => {
          currentScore += increment;
          if (currentScore >= targetScore) {
            scoreNumber.textContent = targetScore;
          } else {
            scoreNumber.textContent = Math.floor(currentScore);
            requestAnimationFrame(animateScore);
          }
        };
        
        animateScore();
      }
      
      // Animation barre de fiabilit√©
      if (fiabilityFill) {
        setTimeout(() => {
          fiabilityFill.style.width = scoreResult.fiabilite + '%';
        }, 500);
      }
      
      // Animation barres de contribution
      if (contributionFills) {
        contributionFills.forEach((fill, index) => {
          setTimeout(() => {
            const scoreValue = scoreResult.contributions[Object.keys(scoreResult.contributions)[index]].score;
            fill.style.width = scoreValue + '%';
          }, 700 + index * 100);
        });
      }
      
    }, 100);
    
    analysisResults.scrollIntoView({ behavior: 'smooth', block: 'center' });
    
    console.log('‚úÖ AFFICHAGE LIFE WATER v5.4 TERMIN√â');
  }

  // ===== FONCTIONS GLOBALES =====
  
  window.downloadPDFReport = async function() {
    console.log('üìÑ T√©l√©chargement PDF demand√©...');
    
    // Ici vous int√©greriez la g√©n√©ration et le t√©l√©chargement du PDF
    // Pour l'instant, on simule
    const link = document.createElement('a');
    link.href = '#'; // URL de votre PDF g√©n√©r√©
    link.download = `rapport-eau-${userData.firstname}-${userData.lastname}.pdf`;
    link.click();
    
    // Notification √† l'utilisateur
    alert('Fonctionnalit√© de t√©l√©chargement PDF √† int√©grer avec votre solution pr√©f√©r√©e !');
  };
  
  window.startNewAnalysis = function() {
    console.log('üîç Nouvelle analyse demand√©e...');
    
    // Masquer les r√©sultats
    if (analysisResults) {
      analysisResults.style.display = 'none';
    }
    
    // Afficher le formulaire en mode simplifi√©
    if (analysisForm) {
      analysisForm.style.display = 'block';
    }
    
    // Passer en mode simplifi√©
    switchToSimplifiedMode();
  };

  // ===== √âV√âNEMENTS =====
  
  // Autocompl√©tion d'adresse
  if (addressInput) {
    addressInput.addEventListener('input', function() {
      const query = this.value.trim();
      
      if (selectedAddress && this.value !== selectedAddress.properties.label) {
        selectedAddress = null;
        if (statusContainer) {
          statusContainer.style.display = 'none';
        }
      }
      
      clearTimeout(debounceTimer);
      debounceTimer = setTimeout(() => {
        searchAddress(query);
      }, 300);
    });

    document.addEventListener('click', function(e) {
      if (addressInput && suggestionsContainer && 
          !addressInput.contains(e.target) && !suggestionsContainer.contains(e.target)) {
        suggestionsContainer.style.display = 'none';
      }
    });
  }

  // Validation en temps r√©el des champs
  [firstnameInput, lastnameInput, emailInput, phoneInput].forEach(input => {
    if (input) {
      input.addEventListener('blur', function() {
        if (this === phoneInput) {
          // T√©l√©phone optionnel, mais si rempli doit √™tre valide
          if (this.value.trim() && isValidPhone(this.value.trim())) {
            this.classList.remove('field__input--error');
          }
        } else if (this === emailInput) {
          if (this.value.trim() && isValidEmail(this.value)) {
            this.classList.remove('field__input--error');
          }
        } else {
          if (this.value.trim()) {
            this.classList.remove('field__input--error');
          }
        }
      });
    }
  });

  if (gdprConsentInput) {
    gdprConsentInput.addEventListener('change', function() {
      if (this.checked) {
        this.classList.remove('field__input--error');
      }
    });
  }

  // Bouton d'analyse avec algorithme scientifique v5.4
  if (startWaterAnalysisBtn) {
    startWaterAnalysisBtn.addEventListener('click', async function(e) {
      e.preventDefault();
      
      console.log('=== D√âBUT ANALYSE EAU v5.4 - INTERFACE OPTIMIS√âE ===');
      
      // Validation du formulaire
      const errors = validateForm();
      if (errors.length > 0) {
        alert('Veuillez corriger les erreurs suivantes :\n\n‚Ä¢ ' + errors.join('\n‚Ä¢ '));
        return;
      }
      
      // Collecte des donn√©es
      let formData;
      if (isSimplifiedMode && userData) {
        // R√©utiliser les donn√©es utilisateur existantes avec nouvelle adresse
        formData = {
          ...userData,
          address: selectedAddress.properties.label,
          coordinates: {
            lat: selectedAddress.geometry.coordinates[1],
            lon: selectedAddress.geometry.coordinates[0]
          },
          codeCommune: selectedAddress.properties.citycode
        };
      } else {
        formData = collectFormData();
        userData = formData; // Sauvegarder pour utilisation future
      }
      
      console.log('üìã Donn√©es collect√©es:', formData);
      
      if (analysisForm) {
        analysisForm.style.display = 'none';
      }
      if (analysisLoading) {
        analysisLoading.style.display = 'block';
      }
      
      try {
        // √âTAPE 1 : Validation des donn√©es
        updateProgressStep('data', 'active');
        if (loadingText) {
          loadingText.textContent = 'Recherche des donn√©es de qualit√© d\'eau...';
        }
        
        // Recherche avec fallback g√©ographique
        const hubeauResult = await fetchHubeauDataWithFallback(
          formData.codeCommune, 
          formData.coordinates.lat, 
          formData.coordinates.lon, 
          20
        );
        
        // Mise √† jour du message selon le type de source
        if (hubeauResult.sourceInfo.type === 'commune_voisine') {
          if (loadingText) {
            loadingText.textContent = `Donn√©es trouv√©es √† ${hubeauResult.sourceInfo.nomCommune} (${hubeauResult.sourceInfo.distance.toFixed(1)}km)...`;
          }
        } else if (hubeauResult.sourceInfo.type === 'aucune_donnee') {
          if (loadingText) {
            loadingText.textContent = 'Recherche √©tendue effectu√©e, donn√©es limit√©es...';
          }
        }
        
        await new Promise(resolve => setTimeout(resolve, 1500));
        updateProgressStep('analysis', 'completed');
        
        // √âTAPE 4 : Scoring scientifique √©quitable v5.4
        updateProgressStep('scoring', 'active');
        if (loadingText) {
          loadingText.textContent = 'Calcul √©quitable avec b√©n√©fice du doute...';
        }
        
        // Algorithme scientifique √©quitable v5.4
        const scoreResult = calculateLifeWaterScore(
          hubeauResult.parametersData, 
          { 
            analyseApprofondie: true, // Toujours d√©taill√© maintenant
            contactProfessional: formData.contactProfessional 
          }, 
          hubeauResult.sourceInfo
        );
        
        await new Promise(resolve => setTimeout(resolve, 1000));
        updateProgressStep('scoring', 'completed');
        
        // √âTAPE 5 : G√©n√©ration du rapport
        updateProgressStep('generation', 'active');
        if (loadingText) {
          loadingText.textContent = 'G√©n√©ration du rapport personnalis√©...';
        }
        
        await generatePDFReport(scoreResult, formData, hubeauResult.parametersData);
        updateProgressStep('generation', 'completed');
        
        // Affichage r√©sultats avec actions
        displayLifeWaterResults(scoreResult, formData, hubeauResult.parametersData);
        
      } catch (error) {
        console.error('Erreur lors de l\'analyse:', error);
        
        const activeStep = document.querySelector(`#analysis-loading-${sectionId} .step.active`);
        if (activeStep) {
          activeStep.className = 'step error';
        }
        
        if (loadingText) {
          loadingText.textContent = 'Erreur lors de l\'analyse. Veuillez r√©essayer.';
        }
        
        setTimeout(() => {
          if (analysisLoading) {
            analysisLoading.style.display = 'none';
          }
          if (analysisForm) {
            analysisForm.style.display = 'block';
          }
        }, 3000);
      }
    });
  }

});
</script>

{% schema %}
{
  "name": "Water Analyzer v5.4",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "default": "Analyseur Scientifique √âquitable de Qualit√© de l'Eau",
      "label": "Titre de la section"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>D√©couvrez la qualit√© de votre eau potable gr√¢ce √† notre algorithme scientifique v5.4 avec interface optimis√©e, responsivit√© am√©lior√©e et t√©l√©chargement PDF.</p>"
    },
    {
      "type": "header",
      "content": "Personnalisation de l'interface"
    },
    {
      "type": "color",
      "id": "primary_color",
      "label": "Couleur principale",
      "default": "#667eea",
      "info": "Modifie la couleur des boutons et accents"
    },
    {
      "type": "color",
      "id": "secondary_color", 
      "label": "Couleur secondaire",
      "default": "#764ba2",
      "info": "Couleur utilis√©e dans les d√©grad√©s"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Couleur de fond",
      "default": "#ffffff",
      "info": "Couleur de fond des sections"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Couleur du texte",
      "default": "#333333",
      "info": "Couleur du texte principal"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Arrondi des bordures",
      "default": 16,
      "info": "Rayon des bordures arrondies"
    }
  ],
  "presets": [
    {
      "name": "Analyseur Scientifique v5.4 Optimis√©"
    }
  ]
}
{% endschema %}

{% if section.settings.primary_color != blank or section.settings.secondary_color != blank %}
<style>
  #water-analyzer-{{ section.id }} {
    {% if section.settings.primary_color != blank %}
      --water-primary-color: {{ section.settings.primary_color }};
    {% endif %}
    {% if section.settings.secondary_color != blank %}
      --water-secondary-color: {{ section.settings.secondary_color }};
    {% endif %}
    {% if section.settings.background_color != blank %}
      --water-bg-primary: {{ section.settings.background_color }};
    {% endif %}
    {% if section.settings.text_color != blank %}
      --water-text-primary: {{ section.settings.text_color }};
    {% endif %}
    {% if section.settings.border_radius != blank %}
      --water-border-radius: {{ section.settings.border_radius }}px;
      --water-border-radius-sm: {{ section.settings.border_radius | minus: 4 }}px;
      --water-border-radius-lg: {{ section.settings.border_radius | plus: 4 }}px;
    {% endif %}
  }
</style>
{% endif %}

<script>
// Suite du JavaScript √† partir de loadingText.textContent
        if (loadingText) {
          loadingText.textContent = 'Recherche des donn√©es de qualit√© d\'eau...';
        }
        
        // Recherche avec fallback g√©ographique
        const hubeauResult = await fetchHubeauDataWithFallback(
          formData.codeCommune, 
          formData.coordinates.lat, 
          formData.coordinates.lon, 
          20
        );
        
        // Mise √† jour du message selon le type de source
        if (hubeauResult.sourceInfo.type === 'commune_voisine') {
          if (loadingText) {
            loadingText.textContent = `Donn√©es trouv√©es √† ${hubeauResult.sourceInfo.nomCommune} (${hubeauResult.sourceInfo.distance.toFixed(1)}km)...`;
          }
        } else if (hubeauResult.sourceInfo.type === 'aucune_donnee') {
          if (loadingText) {
            loadingText.textContent = 'Recherche √©tendue effectu√©e, donn√©es limit√©es...';
          }
        }
        
        await new Promise(resolve => setTimeout(resolve, 1500));
        updateProgressStep('analysis', 'completed');
        
        // √âTAPE 4 : Scoring scientifique √©quitable v5.4
        updateProgressStep('scoring', 'active');
        if (loadingText) {
          loadingText.textContent = 'Calcul √©quitable avec b√©n√©fice du doute...';
        }
        
        // Algorithme scientifique √©quitable v5.4
        const scoreResult = calculateLifeWaterScore(
          hubeauResult.parametersData, 
          { 
            analyseApprofondie: true, // Toujours d√©taill√© maintenant
            contactProfessional: formData.contactProfessional 
          }, 
          hubeauResult.sourceInfo
        );
        
        await new Promise(resolve => setTimeout(resolve, 1000));
        updateProgressStep('scoring', 'completed');
        
        // √âTAPE 5 : G√©n√©ration du rapport
        updateProgressStep('generation', 'active');
        if (loadingText) {
          loadingText.textContent = 'G√©n√©ration du rapport personnalis√©...';
        }
        
        await generatePDFReport(scoreResult, formData, hubeauResult.parametersData);
        updateProgressStep('generation', 'completed');
        
        // Affichage r√©sultats avec actions
        displayLifeWaterResults(scoreResult, formData, hubeauResult.parametersData);
        
      } catch (error) {
        console.error('Erreur lors de l\'analyse:', error);
        
        const activeStep = document.querySelector(`#analysis-loading-${sectionId} .step.active`);
        if (activeStep) {
          activeStep.className = 'step error';
        }
        
        if (loadingText) {
          loadingText.textContent = 'Erreur lors de l\'analyse. Veuillez r√©essayer.';
        }
        
        setTimeout(() => {
          if (analysisLoading) {
            analysisLoading.style.display = 'none';
          }
          if (analysisForm) {
            analysisForm.style.display = 'block';
          }
        }, 3000);
      }
    });
  }

  // ===== FONCTIONS D'AM√âLIORATION UX =====
  
  // Animation d'entr√©e pour les sections
  function animateFormSections() {
    const sections = document.querySelectorAll('.personal-info-section, .address-section, .options-section, .gdpr-section');
    sections.forEach((section, index) => {
      section.style.opacity = '0';
      section.style.transform = 'translateY(20px)';
      
      setTimeout(() => {
        section.style.transition = 'all 0.6s ease';
        section.style.opacity = '1';
        section.style.transform = 'translateY(0)';
      }, index * 150);
    });
  }

  // Validation en temps r√©el am√©lior√©e
  function setupAdvancedValidation() {
    // Validation du t√©l√©phone en temps r√©el
    if (phoneInput) {
      phoneInput.addEventListener('input', function() {
        const value = this.value.replace(/[\s\-\.]/g, '');
        if (value.length > 0) {
          if (isValidPhone(value)) {
            this.style.borderColor = 'var(--water-success-color)';
            this.style.backgroundColor = 'rgba(40, 167, 69, 0.05)';
          } else {
            this.style.borderColor = 'var(--water-warning-color)';
            this.style.backgroundColor = 'rgba(255, 193, 7, 0.05)';
          }
        } else {
          this.style.borderColor = '';
          this.style.backgroundColor = '';
        }
      });
    }

    // Validation email en temps r√©el
    if (emailInput) {
      emailInput.addEventListener('input', function() {
        if (this.value.length > 0) {
          if (isValidEmail(this.value)) {
            this.style.borderColor = 'var(--water-success-color)';
            this.style.backgroundColor = 'rgba(40, 167, 69, 0.05)';
          } else {
            this.style.borderColor = 'var(--water-warning-color)';
            this.style.backgroundColor = 'rgba(255, 193, 7, 0.05)';
          }
        } else {
          this.style.borderColor = '';
          this.style.backgroundColor = '';
        }
      });
    }

    // Validation nom/pr√©nom
    [firstnameInput, lastnameInput].forEach(input => {
      if (input) {
        input.addEventListener('input', function() {
          if (this.value.trim().length >= 2) {
            this.style.borderColor = 'var(--water-success-color)';
            this.style.backgroundColor = 'rgba(40, 167, 69, 0.05)';
          } else if (this.value.length > 0) {
            this.style.borderColor = 'var(--water-warning-color)';
            this.style.backgroundColor = 'rgba(255, 193, 7, 0.05)';
          } else {
            this.style.borderColor = '';
            this.style.backgroundColor = '';
          }
        });
      }
    });
  }

  // Am√©lioration de l'accessibilit√©
  function setupAccessibility() {
    // Annonces pour les lecteurs d'√©cran
    const announcer = document.createElement('div');
    announcer.setAttribute('aria-live', 'polite');
    announcer.setAttribute('aria-atomic', 'true');
    announcer.style.position = 'absolute';
    announcer.style.left = '-10000px';
    announcer.style.width = '1px';
    announcer.style.height = '1px';
    announcer.style.overflow = 'hidden';
    document.body.appendChild(announcer);

    // Fonction pour annoncer les changements
    window.announceToScreenReader = function(message) {
      announcer.textContent = message;
    };

    // Navigation clavier am√©lior√©e
    document.addEventListener('keydown', function(e) {
      // √âchap pour fermer les suggestions
      if (e.key === 'Escape') {
        if (suggestionsContainer && suggestionsContainer.style.display === 'block') {
          suggestionsContainer.style.display = 'none';
          addressInput.focus();
        }
      }
      
      // Fl√®ches pour naviguer dans les suggestions
      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {
        const suggestions = document.querySelectorAll('.address-suggestion');
        if (suggestions.length > 0) {
          e.preventDefault();
          // Logique de navigation dans les suggestions
        }
      }
    });
  }

  // Optimisation des performances
  function setupPerformanceOptimizations() {
    // Lazy loading des images de r√©sultats
    if ('IntersectionObserver' in window) {
      const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const img = entry.target;
            img.src = img.dataset.src;
            img.classList.remove('lazy');
            observer.unobserve(img);
          }
        });
      });

      // Observer les images lazy
      document.querySelectorAll('img[data-src]').forEach(img => {
        imageObserver.observe(img);
      });
    }

    // Debouncing am√©lior√© pour l'autocompl√©tion
    let searchController = null;
    
    window.optimizedSearchAddress = async function(query) {
      // Annuler la requ√™te pr√©c√©dente si elle existe
      if (searchController) {
        searchController.abort();
      }
      
      searchController = new AbortController();
      
      try {
        const response = await fetch(
          `https://api-adresse.data.gouv.fr/search/?q=${encodeURIComponent(query)}&limit=5`,
          { signal: searchController.signal }
        );
        const data = await response.json();
        displaySuggestions(data.features || []);
      } catch (error) {
        if (error.name !== 'AbortError') {
          console.error('Erreur API Adresse:', error);
          showAddressStatus('Erreur lors de la recherche d\'adresse', 'error');
        }
      }
    };
  }

  // Sauvegarde locale temporaire (session)
  function setupTemporaryStorage() {
    // Sauvegarder les donn√©es du formulaire en cours de saisie
    const saveFormData = () => {
      if (isSimplifiedMode) return; // Ne pas sauvegarder en mode simplifi√©
      
      const tempData = {
        firstname: firstnameInput?.value || '',
        lastname: lastnameInput?.value || '',
        email: emailInput?.value || '',
        phone: phoneInput?.value || '',
        timestamp: Date.now()
      };
      
      try {
        sessionStorage.setItem('waterAnalyzer_tempData', JSON.stringify(tempData));
      } catch (e) {
        // Silently fail if sessionStorage is not available
      }
    };

    // Restaurer les donn√©es si disponibles
    const restoreFormData = () => {
      try {
        const tempData = sessionStorage.getItem('waterAnalyzer_tempData');
        if (tempData) {
          const parsed = JSON.parse(tempData);
          // V√©rifier que les donn√©es ne sont pas trop anciennes (1 heure)
          if (Date.now() - parsed.timestamp < 3600000) {
            if (firstnameInput) firstnameInput.value = parsed.firstname || '';
            if (lastnameInput) lastnameInput.value = parsed.lastname || '';
            if (emailInput) emailInput.value = parsed.email || '';
            if (phoneInput) phoneInput.value = parsed.phone || '';
          }
        }
      } catch (e) {
        // Silently fail
      }
    };

    // Nettoyer au succ√®s
    const clearTemporaryData = () => {
      try {
        sessionStorage.removeItem('waterAnalyzer_tempData');
      } catch (e) {
        // Silently fail
      }
    };

    // Setup des event listeners
    [firstnameInput, lastnameInput, emailInput, phoneInput].forEach(input => {
      if (input) {
        input.addEventListener('input', debounce(saveFormData, 1000));
      }
    });

    // Restaurer au chargement
    restoreFormData();

    // Nettoyer au succ√®s de l'analyse
    window.clearTemporaryData = clearTemporaryData;
  }

  // Fonction debounce utilitaire
  function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  // Gestion des erreurs r√©seau am√©lior√©e
  function setupNetworkErrorHandling() {
    window.addEventListener('online', () => {
      console.log('üåê Connexion r√©tablie');
      announceToScreenReader('Connexion internet r√©tablie');
    });

    window.addEventListener('offline', () => {
      console.log('üìµ Connexion perdue');
      announceToScreenReader('Connexion internet perdue. Veuillez v√©rifier votre connexion.');
    });
  }

  // M√©triques et analytics (respectueux de la vie priv√©e)
  function setupPrivacyFriendlyAnalytics() {
    // M√©triques anonymes sans cookies
    const metrics = {
      startTime: Date.now(),
      formCompleted: false,
      analysisRequested: false,
      errorsEncountered: [],
      addressSearches: 0
    };

    // Tracker les √©v√©nements importants
    window.trackEvent = function(event, data = {}) {
      console.log(`üìä √âv√©nement: ${event}`, data);
      
      switch(event) {
        case 'form_completed':
          metrics.formCompleted = true;
          break;
        case 'analysis_requested':
          metrics.analysisRequested = true;
          break;
        case 'address_search':
          metrics.addressSearches++;
          break;
        case 'error':
          metrics.errorsEncountered.push({
            type: data.type,
            timestamp: Date.now() - metrics.startTime
          });
          break;
      }
    };

    // Rapport de session (anonyme)
    window.generateSessionReport = function() {
      return {
        sessionDuration: Date.now() - metrics.startTime,
        formCompleted: metrics.formCompleted,
        analysisRequested: metrics.analysisRequested,
        addressSearches: metrics.addressSearches,
        errorsCount: metrics.errorsEncountered.length,
        userAgent: navigator.userAgent.includes('Mobile') ? 'mobile' : 'desktop'
      };
    };
  }

  // Initialisation de toutes les am√©liorations
  function initializeEnhancements() {
    console.log('üîß Initialisation des am√©liorations UX...');
    
    // D√©marrer les animations apr√®s un petit d√©lai
    setTimeout(() => {
      animateFormSections();
    }, 100);
    
    // Setup des diff√©rents modules
    setupAdvancedValidation();
    setupAccessibility();
    setupPerformanceOptimizations();
    setupTemporaryStorage();
    setupNetworkErrorHandling();
    setupPrivacyFriendlyAnalytics();
    
    console.log('‚úÖ Am√©liorations UX initialis√©es');
  }

  // D√©marrer les am√©liorations une fois le DOM pr√™t
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeEnhancements);
  } else {
    initializeEnhancements();
  }

});
